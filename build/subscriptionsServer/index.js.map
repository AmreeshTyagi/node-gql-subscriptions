{"version":3,"sources":["../../src/subscriptionsServer/index.js"],"names":["WS_PORT","parseInt","process","env","websocketServer","request","response","writeHead","end","listen","console","log","subscriptionServer","create","schema","execute","subscribe","server","path"],"mappings":";;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,IAAMA,UAAUC,SAASC,QAAQC,GAAR,CAAYH,OAAZ,IAAuB,MAAhC,EAAwC,EAAxC,CAAhB;;AAEA;AACA,IAAMI,kBAAkB,wBAAa,UAACC,OAAD,EAAUC,QAAV,EAAuB;AAC1DA,WAASC,SAAT,CAAmB,GAAnB;AACAD,WAASE,GAAT;AACD,CAHuB,CAAxB;;AAKA;AACAJ,gBAAgBK,MAAhB,CAAuBT,OAAvB,EAAgC;AAAA,SAAMU,QAAQC,GAAR,+CACQX,OADR,CAAN;AAAA,CAAhC;;AAIA,IAAMY,qBAAqB,6CAAmBC,MAAnB,CAA0B;AACnDC,0BADmD;AAEnDC,2BAFmD;AAGnDC;AAHmD,CAA1B,EAIxB;AACDC,UAAQb,eADP;AAEDc,QAAM;AAFL,CAJwB,CAA3B;;kBASeN,kB","file":"index.js","sourcesContent":["import { createServer } from 'http';\nimport { SubscriptionServer } from 'subscriptions-transport-ws';\nimport { execute, subscribe } from 'graphql';\nimport { schema } from '../graphql';\n\nconst WS_PORT = parseInt(process.env.WS_PORT || '3001', 10);\n\n// Create WebSocket listener server\nconst websocketServer = createServer((request, response) => {\n  response.writeHead(404);\n  response.end();\n});\n\n// Bind it to port and start listening\nwebsocketServer.listen(WS_PORT, () => console.log(\n  `Websocket Server is now running on port: ${WS_PORT}`\n));\n\nconst subscriptionServer = SubscriptionServer.create({\n  schema,\n  execute,\n  subscribe,\n}, {\n  server: websocketServer,\n  path: '/subscriptions',\n});\n\nexport default subscriptionServer;\n"]}