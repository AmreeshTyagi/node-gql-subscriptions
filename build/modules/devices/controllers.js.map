{"version":3,"sources":["../../../src/modules/devices/controllers.js"],"names":["deviceConstants","createDevice","name","location","create","then","device","publish","CREATE_DEVICE","Object","assign","type","toObject","updatedDevice","id","previousLocation","findById","lat","lng","save","UPDATE_DEVICE","getDevice","getDevices","limit","skip","find","sort","updatedAt"],"mappings":";;;;;;;AAAA;;AACA;;IAAYA,e;;AACZ;;;;;;;;AAEO,IAAMC,sCAAe,SAAfA,YAAe,OAAwB;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAClD,SAAO,gBAAOC,MAAP,CAAc;AACnBF,cADmB;AAEnBC;AAFmB,GAAd,EAGJE,IAHI,CAGC,UAACC,MAAD,EAAY;AAClB,mBAAOC,OAAP,CAAeP,gBAAgBQ,aAA/B,EAA8CC,OAAOC,MAAP,CAAc;AAC1DC,YAAMX,gBAAgBQ;AADoC,KAAd,EAE3CF,OAAOM,QAAP,EAF2C,CAA9C;AAGA,WAAON,MAAP;AACD,GARM,CAAP;AASD,CAVM;;AAYA,IAAMO,wCAAgB,SAAhBA,aAAgB,QAAsB;AAAA,MAAnBC,EAAmB,SAAnBA,EAAmB;AAAA,MAAfX,QAAe,SAAfA,QAAe;;AACjD,MAAIY,yBAAJ;AACA,SAAO,gBAAOC,QAAP,CAAgBF,EAAhB,EACJT,IADI,CACC,UAACC,MAAD,EAAY;AAChBS,uBAAmB;AACjBE,WAAKX,OAAOH,QAAP,CAAgBc,GADJ;AAEjBC,WAAKZ,OAAOH,QAAP,CAAgBe;AAFJ,KAAnB;AAIAZ,WAAOH,QAAP,GAAkBA,QAAlB;AACA,WAAOG,OAAOa,IAAP,EAAP;AACD,GARI,EASJd,IATI,CASC,UAACC,MAAD,EAAY;AAChB,mBAAOC,OAAP,CAAeP,gBAAgBoB,aAA/B,EAA8CX,OAAOC,MAAP,CAAc;AAC1DK,wCAD0D;AAE1DJ,YAAMX,gBAAgBoB;AAFoC,KAAd,EAG3Cd,OAAOM,QAAP,EAH2C,CAA9C;AAIA,WAAON,MAAP;AACD,GAfI,CAAP;AAgBD,CAlBM;;AAoBA,IAAMe,gCAAY,SAAZA,SAAY,CAACP,EAAD;AAAA,SAAQ,gBAAOE,QAAP,CAAgBF,EAAhB,CAAR;AAAA,CAAlB;;AAEA,IAAMQ,kCAAa,SAAbA,UAAa;AAAA,0BAAGC,KAAH;AAAA,MAAGA,KAAH,+BAAW,CAAX;AAAA,yBAAcC,IAAd;AAAA,MAAcA,IAAd,8BAAqB,CAArB;AAAA,SAA6B,gBAAOC,IAAP,GACpDC,IADoD,CAC/C,EAAEC,WAAW,CAAC,CAAd,EAD+C,EAEpDH,IAFoD,CAE/CA,IAF+C,EAGpDD,KAHoD,CAG9CA,KAH8C,CAA7B;AAAA,CAAnB","file":"controllers.js","sourcesContent":["import { pubsub } from '../../config/pubsub';\nimport * as deviceConstants from './constants';\nimport Device from './model';\n\nexport const createDevice = ({ name, location }) => {\n  return Device.create({\n    name,\n    location,\n  }).then((device) => {\n    pubsub.publish(deviceConstants.CREATE_DEVICE, Object.assign({\n      type: deviceConstants.CREATE_DEVICE,\n    }, device.toObject()));\n    return device;\n  });\n}\n\nexport const updatedDevice = ({ id, location }) => {\n  let previousLocation;\n  return Device.findById(id)\n    .then((device) => {\n      previousLocation = {\n        lat: device.location.lat,\n        lng: device.location.lng,\n      };\n      device.location = location;\n      return device.save();\n    })\n    .then((device) => {\n      pubsub.publish(deviceConstants.UPDATE_DEVICE, Object.assign({\n        previousLocation,\n        type: deviceConstants.UPDATE_DEVICE,\n      }, device.toObject()));\n      return device;\n    });\n}\n\nexport const getDevice = (id) => Device.findById(id);\n\nexport const getDevices = ({ limit = 0, skip = 0 }) => Device.find()\n  .sort({ updatedAt: -1 })\n  .skip(skip)\n  .limit(limit);\n"]}